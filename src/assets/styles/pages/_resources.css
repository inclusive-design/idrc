/* This file contains styles for resources page. */

/* There are some usages of !important, which are used to override UIO rules. */

.page--resources {
    .content {
        flex: 0 0 90%;
        padding-block-start: calc(32 / 16 * 1rem);
        padding-inline-end: calc(var(--gutter) / 2);
    }

    article {
        justify-content: unset;
    }

    .resources-container {
        column-gap: calc(32 / 16 * 1rem);
        display: grid;
    }

    .filter {
        display: flex;
        flex-direction: column;
        padding-block-start: calc(32 / 16 * 1rem);
        padding-inline: calc(var(--gutter) / 2);

        h2 {
            margin-block-end: calc(8 / 16 * 1rem);
        }

        .filter-expand-button {
            border-block-start: calc(3 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
            border-radius: 2px;
            column-gap: calc(8 / 16 * 1rem);
            margin-block-start: 0;
            padding-block: calc(8 / 16 * 1rem);
            padding-inline: 0;

            .filter-content {
                display: grid;
                grid-template-columns: 1fr 20fr 1fr;
                padding-inline: calc(3 / 16 * 1rem);

                .filter-title {
                    column-gap: calc(8 / 16 * 1rem);
                    display: flex;
                    font-family: "Work Sans", sans-serif;
                    font-weight: 600;
                    margin-inline-start: calc(8 / 16 * 1rem);

                    p {
                        color: var(--fl-fgColor, var(--indigo-500));
                        margin-block: 0;
                    }
                }

                svg {
                    block-size: calc(16 / 16 * 1rem);
                    inline-size: calc(16 / 16 * 1rem);
                    margin: auto;
                    stroke: var(--fl-fgColor, var(--indigo-500));
                }
            }

            &:active {
                background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                border-block-start: calc(3 / 16 * 1rem) solid var(--fl-bgColor, var(--indigo-800));

                .filter-content {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                }

                .filter-title {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                }

                p {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                    color: var(--fl-bgColor, var(--indigo-800)) !important;
                }

                svg {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                    stroke: var(--fl-bgColor, var(--indigo-800));
                }
            }

            &:hover {
                background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                border-block-start: calc(3 / 16 * 1rem) solid var(--fl-bgColor, var(--indigo-800));

                .filter-content {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                }

                .filter-title {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                }

                p {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                    color: var(--fl-bgColor, var(--indigo-800)) !important;
                }

                svg {
                    background-color: var(--fl-fgColor, var(--fl-bgColor)) !important;
                    stroke: var(--fl-bgColor, var(--indigo-800));
                }
            }

            &:focus {
                border-block-start: calc(3 / 16 * 1rem) solid transparent;
                outline: var(--fl-fgColor, var(--indigo-500)) solid calc(3 / 16 * 1rem);
                z-index: 1;
            }

            &[aria-expanded="false"] {
                .icon-plus {
                    display: block;
                }

                .icon-minus {
                    display: none;
                }
            }

            &[aria-expanded="true"] {
                .icon-plus {
                    display: none;
                }

                .icon-minus {
                    display: block;
                }
            }
        }

        /* Override the default style defined in _base.scss */
        ul {
            margin-block: calc(4 / 16 * 1rem) calc(32 / 16 * 1rem);
            margin-inline: 0;

            li {
                margin-block-end: calc(8 / 16 * 1rem);

                &::before {
                    content: none;
                }
            }
        }

        /* Custom checkboxes. Reference: https://codepen.io/spacemonkey/pen/vmZROv */
        .filter-checkbox {
            opacity: 0; /* hide it */
            position: absolute; /* take it out of document flow */

            & + label {
                cursor: pointer;
                display: flex;
                padding: 0;
                position: relative;
            }

            /* Box */
            & + label::before {
                block-size: calc(20 / 16 * 1rem);
                border: calc(1 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
                border-radius: calc(3 / 16 * 1rem);
                content: "";
                display: inline-block;
                inline-size: calc(20 / 16 * 1rem);
                margin-block: auto;
                margin-inline: 0 calc(10 / 16 * 1rem);
                vertical-align: text-top;
            }

            /* Checkmark */
            &:checked + label::after {
                block-size: calc(2 / 16 * 1rem);
                color: var(--fl-bgColor, white);
                content: "\2713";
                display: inline-block;
                font-family: system-ui;
                font-size: calc(18 / 16 * 1rem);
                inline-size: calc(2 / 16 * 1rem);
                left: calc(2 / 16 * 1rem);
                position: absolute;
                top: calc(-2 / 16 * 1rem);
            }

            &:active + label::before {
                background-color: var(--fl-fgColor, var(--indigo-200));
            }

            &:focus + label::before {
                border: calc(1 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
                box-shadow:
                    0 0 0 calc(2 / 16 * 1rem) var(--fl-bgColor, #fff),
                    0 0 0 calc(4 / 16 * 1rem) var(--fl-fgColor, var(--indigo-500));
            }

            &:hover + label::before {
                border: calc(3 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
            }
        }

        /* End of custom checkboxes */
    }

    .apply-button {
        background-color: var(--fl-fgColor, var(--indigo-500));
        border: 2px solid var(--fl-fgColor, var(--indigo-500));
        border-radius: calc(5 / 16 * 1rem);
        color: var(--fl-bgColor, white);
        font-size: calc(16 / 16 * 1rem);
        font-weight: var(--fw-medium);
        line-height: calc(24 / 16 * 1rem);
        margin-block-start: calc(16 / 16 * 1rem);
        padding-block: calc(10 / 16 * 1rem);
        padding-inline: calc(14 / 16 * 1rem);

        &:hover {
            background-color: var(--fl-fgColor, var(--indigo-800)) !important;
            border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;
            color: var(--fl-bgColor, #fff) !important;
        }

        &:focus {
            background-color: var(--fl-fgColor, var(--indigo-800));
            border: 2px solid var(--fl-fgColor, var(--indigo-800));
            color: var(--fl-bgColor, #fff);
            outline: var(--fl-fgColor, var(--indigo-500)) solid calc(3 / 16 * 1rem);
            outline-offset: calc(3 / 16 * 1rem);
        }

        &:active {
            background-color: var(--fl-fgColor, var(--indigo-200));
            color: var(--fl-bgColor, var(--indigo-500));
        }
    }

    .reset-button {
        background-color: var(--fl-fgColor, var(--grey-100));
        border: 2px solid var(--fl-fgColor, var(--indigo-500));
        border-radius: calc(5 / 16 * 1rem);
        color: var(--fl-bgColor, var(--indigo-500));
        font-size: calc(16 / 16 * 1rem);
        font-weight: var(--fw-medium);
        padding-block: calc(10 / 16 * 1rem);
        padding-inline: calc(14 / 16 * 1rem);

        &:hover {
            background-color: var(--fl-fgColor, var(--grey-100)) !important;
            border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;
            color: var(--fl-bgColor, --indigo-800) !important;
        }

        &:focus {
            background-color: var(--fl-fgColor, var(--grey-100));
            border: 2px solid var(--fl-fgColor, var(--indigo-800));
            color: var(--fl-bgColor, --indigo-800);
            outline: var(--fl-fgColor, var(--indigo-800)) solid calc(3 / 16 * 1rem);
            outline-offset: calc(3 / 16 * 1rem);
        }

        &:active {
            background-color: var(--fl-fgColor, var(--indigo-500));
            color: var(--fl-bgColor, #fff);
        }
    }

    .resources-no-results {
        background-color: var(--grey-100);
        font-size: calc(20 / 16 * 1rem);
        font-weight: 600;
        margin-block: calc(16 / 16 * 1rem) calc(24 / 16 * 1rem);
        padding: calc(16 / 16 * 1rem);
        padding-inline-start: calc(20 / 16 * 1rem);
    }

    .resources-applied-filters {
        margin: 0;
        padding-block-end: calc(24 / 16 * 1rem);

        h3 {
            border-block-start: 2px solid var(--grey-200);
            margin-block-start: 0;
            padding-block-start: calc(24 / 16 * 1rem);
        }

        .filter-tags {
            display: flex;
            flex-wrap: wrap;
            gap: calc(16 / 16 * 1rem);

            .filter-tag {
                background-color: #f2f2f2;
                border: 2px solid var(--fl-fgColor, var(--indigo-500));
                border-radius: calc(48 / 16 * 1rem);
                column-gap: calc(4 / 16 * 1rem);
                display: flex;
                justify-content: center;
                padding: calc(8 / 16 * 1rem);
                white-space: nowrap;

                p {
                    color: var(--fl-fgColor, var(--indigo-500));
                    margin: auto;
                }

                svg {
                    block-size: calc(16 / 16 * 1rem);
                    inline-size: calc(16 / 16 * 1rem);
                    margin: auto;
                    stroke: var(--fl-buttonFgColor, var(--indigo-500));
                }

                &:hover {
                    background-color: var(--fl-fgColor, var(--grey-100)) !important;
                    border: 2px solid var(--fl-fgColor, var(--indigo-800)) !important;

                    p:not(:focus) {
                        background-color: var(--fl-fgColor, var(--grey-100)) !important;
                        color: var(--fl-bgColor, var(--indigo-800)) !important;
                    }

                    svg:not(:focus) {
                        background-color: var(--fl-fgColor, var(--grey-100)) !important;
                        stroke: var(--fl-bgColor, var(--indigo-800)) !important;
                    }
                }

                &:focus {
                    background-color: var(--fl-fgColor, var(--grey-100));
                    border: 2px solid var(--fl-fgColor, var(--indigo-800));
                    color: var(--fl-bgColor, var(--indigo-800));
                    outline: var(--fl-fgColor, var(--indigo-800)) solid calc(3 / 16 * 1rem);
                    outline-offset: calc(3 / 16 * 1rem);

                    p {
                        background-color: var(--fl-buttonBgColor, var(--grey-100)) !important;
                        color: var(--fl-buttonFgColor, var(--indigo-800)) !important;
                    }

                    svg {
                        background-color: var(--fl-buttonBgColor, var(--grey-100)) !important;
                        stroke: var(--fl-buttonFgColor, var(--indigo-800)) !important;
                    }
                }

                &:active {
                    background-color: var(--fl-fgColor, var(--indigo-500));

                    p {
                        color: var(--fl-bgColor, #fff);
                    }

                    svg {
                        stroke: var(--fl-bgColor, #fff);
                    }
                }
            }

            .filter-clear-all {
                margin-block: auto;
                margin-inline: 0;
            }
        }
    }

    .resources-filtered-number {
        font-size: calc(16 / 16 * 1rem);
        font-weight: 400;
        padding-block: calc(16 / 16 * 1rem) calc(24 / 16 * 1rem);
        padding-inline: 0;
    }

    .resources-sort {
        display: flex;
        gap: calc(8 / 16 * 1rem);
        justify-content: flex-end;
        margin-block-end: calc(4 / 16 * 1rem);

        select {
            border: calc(1 / 16 * 1rem) solid var(--fl-fgColor, var(--black));
            border-radius: calc(3 / 16 * 1rem);
            padding-inline: calc(8 / 16 * 1rem);
        }
    }

    .card {
        border-block-start: 3px solid var(--coral-500);
        margin-block-end: calc(48 / 16 * 1rem);

        .card-image {
            margin-block: calc(16 / 16 * 1rem);
            margin-inline: 0;
            object-fit: contain;
        }

        .card-title {
            display: flex;
            gap: calc(8 / 16 * 1rem);
            margin-block-start: calc(16 / 16 * 1rem);

            svg {
                block-size: calc(24 / 16 * 1rem);
                inline-size: calc(24 / 16 * 1rem);
                margin-block: auto;
                stroke: var(--fl-fgColor, var(--black));
            }
        }

        .card-tags {
            display: flex;
            flex-wrap: wrap;
            gap: calc(16 / 16 * 1rem);
            margin-block: calc(8 / 16 * 1rem);

            .card-tag {
                background-color: #f2f2f2;
                border-radius: calc(48 / 16 * 1rem);
                column-gap: calc(4 / 16 * 1rem);
                display: flex;
                justify-content: center;
                padding: calc(8 / 16 * 1rem);
                white-space: nowrap;

                p {
                    font-weight: 500;
                    margin: auto;
                }

                svg {
                    block-size: calc(16 / 16 * 1rem);
                    inline-size: calc(16 / 16 * 1rem);
                    margin: auto;
                    stroke: var(--fl-fgColor, var(--black));
                }
            }
        }

        .card-publishedYear {
            font-size: calc(14 / 16 * 1rem);
            margin-block-start: calc(16 / 16 * 1rem);
        }

        .card-link {
            margin-block-start: calc(16 / 16 * 1rem);

            a {
                display: grid;
                font-weight: 500;
                gap: calc(4 / 16 * 1rem);
                grid-template-columns: max-content min-content;
                inline-size: min-content;
            }

            svg {
                block-size: calc(16 / 16 * 1rem);
                inline-size: calc(16 / 16 * 1rem);
                margin: auto;
            }
        }
    }
}

/* Custom styles when "enhance inputs" is enabled */

/* Custom checkbox */

.fl-input-enhanced {
    .filter {
        .filter-checkbox + label::before {
            border: calc(2 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
        }

        .filter-checkbox:focus + label::before,
        .filter-checkbox:hover + label::before {
            border: calc(2 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
            box-shadow:
                0 0 0 calc(2 / 16 * 1rem) var(--fl-bgColor, #fff),
                0 0 0 calc(4 / 16 * 1rem) var(--fl-fgColor, var(--indigo-500));
        }
    }
}

/* Box checked */
.filter .filter-checkbox:checked + label::before {
    background: var(--fl-fgColor, var(--indigo-500));
}

/* Box active */
.filter .filter-checkbox:active + label::before {
    background-color: var(--fl-bgColor, var(--indigo-500));
    border: calc(2.5 / 16 * 1rem) solid var(--fl-fgColor, var(--indigo-500));
}

@media (width >= 600px) {
    .page--resources {
        .resources-container {
            grid-template-columns: 1fr 2fr;
        }

        .card {
            display: grid;
            grid-template-columns: 2fr 1fr;

            .card-image {
                margin: calc(16 / 16 * 1rem);
            }
        }

        .filter {
            padding-inline-end: 0;
        }
    }
}
